name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*' # Trigger on version tags (e.g., v1.0.0)

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Git metadata
        id: meta
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "REF_TYPE=${GITHUB_REF_TYPE}" >> $GITHUB_OUTPUT
          echo "REF_NAME=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          # The above lines can differ depending on how you prefer to parse tag/branch names

      - name: Determine image tags
        id: set-tags
        run: |
          IMAGE_NAME="gbwebdev/zigbee2mqtt-maas-power"
          SHORT_SHA="${{ steps.meta.outputs.SHORT_SHA }}"
          REF_TYPE="${{ steps.meta.outputs.REF_TYPE }}"
          REF_NAME="${{ steps.meta.outputs.REF_NAME }}"

          # Initialize variables
          SHA_TAG=""
          LATEST_TAG=""

          # If pushing to the 'develop' branch:
          if [ "$REF_TYPE" = "branch" ] && [ "$REF_NAME" = "develop" ]; then
            SHA_TAG="${IMAGE_NAME}:develop-${SHORT_SHA}"
            LATEST_TAG="${IMAGE_NAME}:latest-dev"
          
          # If pushing a tag (on 'main' or any other default line):
          elif [ "$REF_TYPE" = "tag" ]; then
            SHA_TAG="${IMAGE_NAME}:${REF_NAME}"
            LATEST_TAG="${IMAGE_NAME}:latest"
          
          else
            echo "This workflow only handles 'develop' branch pushes or tag pushes."
            exit 1
          fi

          echo "SHA_TAG=$SHA_TAG" >> $GITHUB_OUTPUT
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Use the tags we created in the 'set-tags' step:
          tags: |
            ${{ steps.set-tags.outputs.SHA_TAG }}
            ${{ steps.set-tags.outputs.LATEST_TAG }}